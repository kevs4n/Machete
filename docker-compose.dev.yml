version: '3.8'

services:
  # Caddy reverse proxy
  caddy:
    image: caddy:2-alpine
    container_name: machete-caddy-dev
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./core/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./core/caddy/data:/data
      - ./core/caddy/config:/config
    networks:
      - machete-network
    depends_on:
      - frontend-dev
      - api-dev

  # Frontend development server
  frontend-dev:
    build:
      context: ./core/frontend
      dockerfile: Dockerfile.dev
    container_name: machete-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./core/frontend/src:/app/src
      - ./core/frontend/public:/app/public
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - CHOKIDAR_USEPOLLING=true
    networks:
      - machete-network
    depends_on:
      - api-dev

  # API development server
  api-dev:
    build:
      context: ./core/api
      dockerfile: Dockerfile.dev
    container_name: machete-api-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./core/api/src:/app/src
      - ./tools:/app/tools
      - ./data:/app/data
    environment:
      - NODE_ENV=development
      - DOCKER_SOCKET=/var/run/docker.sock
    networks:
      - machete-network
    depends_on:
      - database

  # Database
  database:
    image: postgres:15-alpine
    container_name: machete-db-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: machete
      POSTGRES_USER: machete
      POSTGRES_PASSWORD: machete_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - machete-network

networks:
  machete-network:
    driver: bridge

volumes:
  postgres_data_dev:
