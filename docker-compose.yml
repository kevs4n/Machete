services:
  # Caddy reverse proxy
  caddy:
    image: caddy:2-alpine
    container_name: machete-caddy
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./core/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./core/caddy/data:/data
      - ./core/caddy/config:/config
    networks:
      - machete-network
    depends_on:
      - frontend
      - api

  # Core frontend
  frontend:
    build:
      context: ./core/frontend
      dockerfile: Dockerfile
    container_name: machete-frontend
    restart: unless-stopped
    environment:
      - API_URL=http://api:8000
    networks:
      - machete-network
    depends_on:
      - api

  # Core API (Python FastAPI)
  api:
    build:
      context: ./core/api
      dockerfile: Dockerfile
    container_name: machete-api
    restart: unless-stopped
    ports:
      - "8090:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./tools:/app/tools
      - ./data:/app/data
    environment:
      - DEBUG=false
      - DATABASE_URL=postgresql+asyncpg://machete:machete_password@database:5432/machete
      - REDIS_URL=redis://redis:6379/0
      - DOCKER_SOCKET=/var/run/docker.sock
      - DOCKER_NETWORK=machete_machete-network
      - SECRET_KEY=production-secret-key-change-me-minimum-32-characters
    networks:
      - machete-network
    depends_on:
      - database
      - redis

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: machete-redis
    restart: unless-stopped
    networks:
      - machete-network

  # Database for tool registry
  database:
    image: postgres:15-alpine
    container_name: machete-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: machete
      POSTGRES_USER: machete
      POSTGRES_PASSWORD: machete_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - machete-network

networks:
  machete-network:
    driver: bridge

volumes:
  postgres_data:
